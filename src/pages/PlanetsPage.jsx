import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Tab } from '@headlessui/react';
import AnimatedRoute from '../components/common/AnimatedRoute';

const PlanetsPage = () => {
  const [selectedTab, setSelectedTab] = useState(0);
  
  // Chi ti·∫øt v·ªÅ t·ª´ng h√†nh tinh
  const astrologyData = [
    {
      id: "sun",
      title: "M·∫∑t Tr·ªùi",
      sign: "Thi√™n B√¨nh",
      house: "Nh√† 4", 
      icon: "‚òÄÔ∏è",
      color: "planet-sun",
      signColor: "sign-libra",
      content: [
        "T√≠nh c√°ch c·ªët l√µi c·ªßa B·∫£o Ng·ªçc mang nƒÉng l∆∞·ª£ng Thi√™n B√¨nh: y√™u c√°i ƒë·∫πp, c√¥ng b·∫±ng, s·ª± h√†i h√≤a v√† r·∫•t gi·ªèi trong vi·ªác l√†m trung gian, h√≤a gi·∫£i m√¢u thu·∫´n.",
        "·ªû nh√† 4, M·∫∑t Tr·ªùi cho th·∫•y B·∫£o Ng·ªçc c√≥ s·ª± g·∫Øn k·∫øt m·∫°nh v·ªõi gia ƒë√¨nh, t·ªï ti√™n, c·ªôi ngu·ªìn. C√≥ th·ªÉ r·∫•t quan t√¢m ƒë·∫øn vi·ªác x√¢y d·ª±ng m·ªôt t·ªï ·∫•m √™m ƒë·ªÅm ho·∫∑c t√¨m s·ª± ·ªïn ƒë·ªãnh trong ƒë·ªùi s·ªëng n·ªôi t√¢m.",
        "Tuy nhi√™n, M·∫∑t Tr·ªùi r∆°i v√†o th·∫ø suy y·∫øu (fall) ·ªü Thi√™n B√¨nh, n√™n ng∆∞·ªùi n√†y d·ªÖ hy sinh ch√≠nh ki·∫øn ƒë·ªÉ l√†m v·ª´a l√≤ng ng∆∞·ªùi kh√°c ‚Äì ƒë√¢y l√† b√†i h·ªçc v·ªÅ vi·ªác kh·∫≥ng ƒë·ªãnh b·∫£n th√¢n m√† kh√¥ng ph√° v·ª° h√≤a kh√≠."
      ],
      insight: "B√†i h·ªçc c√¢n b·∫±ng gi·ªØa ƒë·ª©ng l√™n cho ch√≠nh m√¨nh v√† duy tr√¨ s·ª± h√≤a h·ª£p."
    },
    {
      id: "moon",
      title: "M·∫∑t TrƒÉng",
      sign: "S∆∞ T·ª≠",
      house: "Nh√† 3", 
      icon: "üåô",
      color: "planet-moon",
      signColor: "sign-leo",
      content: [
        "Tr√°i tim c·ªßa B·∫£o Ng·ªçc r·∫•t ·∫•m √°p, c·∫ßn ƒë∆∞·ª£c c√¥ng nh·∫≠n, y√™u th∆∞∆°ng v√† ƒë∆∞·ª£c \"t·ªèa s√°ng\".",
        "·ªû nh√† 3 ‚Äì ng√¥i nh√† c·ªßa giao ti·∫øp, h·ªçc h√†nh, t∆∞ duy ‚Äì ƒëi·ªÅu n√†y th·ªÉ hi·ªán m·ªôt nƒÉng l·ª±c bi·ªÉu ƒë·∫°t c·∫£m x√∫c m·∫°nh m·∫Ω, c√≥ th·ªÉ qua vi·∫øt l√°ch, n√≥i chuy·ªán, k·ªÉ chuy·ªán ho·∫∑c l√†m vi·ªác trong lƒ©nh v·ª±c truy·ªÅn th√¥ng.",
        "M·∫∑t TrƒÉng S∆∞ T·ª≠ c≈©ng khi·∫øn B·∫£o Ng·ªçc gi√†u l√≤ng t·ª± t√¥n, ƒë√¥i l√∫c h∆°i nh·∫°y c·∫£m tr∆∞·ªõc s·ª± t·ª´ ch·ªëi, nh∆∞ng l·∫°i r·∫•t chung th·ªßy v·ªõi ng∆∞·ªùi m√¨nh y√™u th∆∞∆°ng."
      ],
      insight: "Kh·∫£ nƒÉng truy·ªÅn ƒë·∫°t c·∫£m x√∫c m·∫°nh m·∫Ω v√† nhu c·∫ßu ƒë∆∞·ª£c c√¥ng nh·∫≠n."
    },
    {
      id: "mercury",
      title: "Sao Th·ªßy",
      sign: "X·ª≠ N·ªØ",
      house: "Nh√† 4", 
      icon: "‚òø",
      color: "planet-mercury",
      signColor: "sign-virgo",
      content: [
        "ƒê√¢y l√† v·ªã tr√≠ m·∫°nh nh·∫•t c·ªßa Sao Th·ªßy v√¨ X·ª≠ N·ªØ l√† cung \"ng√¥i nh√†\" c·ªßa h√†nh tinh n√†y. B·∫£o Ng·ªçc c√≥ t∆∞ duy ph√¢n t√≠ch tuy·ªát v·ªùi, kh·∫£ nƒÉng quan s√°t chi ti·∫øt, s·∫Øc b√©n, th·ª±c t·∫ø v√† r·∫•t bi·∫øt c√°ch tr√¨nh b√†y v·∫•n ƒë·ªÅ.",
        "Tuy nhi√™n, khi ƒëi l√πi (Retrograde), c√°ch suy nghƒ© v√† giao ti·∫øp c√≥ xu h∆∞·ªõng h∆∞·ªõng n·ªôi. Ng∆∞·ªùi n√†y d·ªÖ \"t·ª± n√≥i chuy·ªán v·ªõi ch√≠nh m√¨nh\", c√≥ xu h∆∞·ªõng suy t∆∞ s√¢u v√† t·ª± ph√™ b√¨nh b·∫£n th√¢n r·∫•t nhi·ªÅu.",
        "Sao Th·ªßy nh√† 4 nh·∫•n m·∫°nh l·∫°i ch·ªß ƒë·ªÅ: tr√≠ tu·ªá v√† s·ª± nh·∫≠n th·ª©c b·∫Øt ngu·ªìn t·ª´ m√¥i tr∆∞·ªùng gia ƒë√¨nh ho·∫∑c ·∫£nh h∆∞·ªüng t·ª´ cha m·∫π."
      ],
      insight: "T∆∞ duy ph√¢n t√≠ch s·∫Øc b√©n, nh∆∞ng c·∫ßn c·∫©n th·∫≠n v·ªõi xu h∆∞·ªõng ph√™ b√¨nh n·ªôi t√¢m."
    },
    {
      id: "venus",
      title: "Sao Kim",
      sign: "B·ªç C·∫°p",
      house: "Nh√† 5", 
      icon: "‚ôÄÔ∏è",
      color: "planet-venus",
      signColor: "sign-scorpio",
      content: [
        "M·ªôt t√¢m h·ªìn y√™u m√£nh li·ªát, trung th√†nh, nh∆∞ng c≈©ng c·ª±c k·ª≥ s√¢u s·∫Øc v√† k√≠n ƒë√°o trong t√¨nh c·∫£m.",
        "C√≥ th·ªÉ c√≥ xu h∆∞·ªõng y√™u theo ki·ªÉu \"t·∫•t c·∫£ ho·∫∑c kh√¥ng g√¨ c·∫£\". R·∫•t kh√≥ ƒë·ªÉ y√™u qua loa. Khi y√™u, ng∆∞·ªùi n√†y th∆∞·ªùng b·ªã cu·ªën h√∫t b·ªüi s·ª± b√≠ ·∫©n, chi·ªÅu s√¢u c·∫£m x√∫c v√† th·∫≠m ch√≠ l√† c√°c t√¨nh hu·ªëng \"nguy hi·ªÉm\" v·ªÅ m·∫∑t c·∫£m x√∫c.",
        "Nh√† 5 l√† nh√† c·ªßa t√¨nh y√™u, ngh·ªá thu·∫≠t, gi·∫£i tr√≠ ‚Äì ƒë√¢y l√† ng∆∞·ªùi c√≥ s√°ng t·∫°o m·∫°nh m·∫Ω, c√≥ th·ªÉ l√† ngh·ªá sƒ©, nh√† vi·∫øt k·ªãch b·∫£n, l√†m phim, v.v."
      ],
      insight: "Kh·∫£ nƒÉng y√™u s√¢u s·∫Øc v√† s√°ng t·∫°o ƒë·∫ßy ƒëam m√™ trong ngh·ªá thu·∫≠t."
    },
    {
      id: "mars",
      title: "Sao H·ªèa",
      sign: "X·ª≠ N·ªØ",
      house: "Nh√† 4", 
      icon: "‚ôÇÔ∏è",
      color: "planet-mars",
      signColor: "sign-virgo",
      content: [
        "B·∫£o Ng·ªçc l√†m vi·ªác r·∫•t chƒÉm ch·ªâ, c√≥ t√≠nh t·ªï ch·ª©c cao v√† ki√™n tr√¨ theo ƒëu·ªïi m·ª•c ti√™u m·ªôt c√°ch c√≥ chi·∫øn l∆∞·ª£c.",
        "Tuy nhi√™n, d·ªÖ b·ªã qu√° c·∫ßu to√†n, ƒë√≤i h·ªèi b·∫£n th√¢n (v√† c·∫£ ng∆∞·ªùi kh√°c) ph·∫£i l√†m vi·ªác ho√†n h·∫£o, ƒëi·ªÅu n√†y d·ªÖ d·∫´n ƒë·∫øn cƒÉng th·∫≥ng.",
        "Trong m√¥i tr∆∞·ªùng gia ƒë√¨nh c√≥ th·ªÉ t·ª´ng ch·ªãu √°p l·ª±c l·ªõn ho·∫∑c l√† ng∆∞·ªùi b·∫£o v·ªá gia ƒë√¨nh, hy sinh nhi·ªÅu v√¨ ng∆∞·ªùi th√¢n."
      ],
      insight: "S·ª©c m·∫°nh n·ªôi t√¢m v√† kh·∫£ nƒÉng v∆∞·ª£t kh√≥ th√¥ng qua s·ª± t·ªâ m·ªâ, ki√™n nh·∫´n."
    },
    {
      id: "jupiter",
      title: "Sao M·ªôc",
      sign: "S∆∞ T·ª≠",
      house: "Nh√† 3", 
      icon: "‚ôÉ",
      color: "planet-jupiter",
      signColor: "sign-leo",
      content: [
        "Cho th·∫•y tr√≠ tu·ªá t·ª± nhi√™n, kh·∫£ nƒÉng truy·ªÅn c·∫£m h·ª©ng, n√≥i chuy·ªán h·∫•p d·∫´n v√† ƒë·∫ßy l√¥i cu·ªën. ƒê√¢y l√† ng∆∞·ªùi d·ªÖ th√†nh c√¥ng trong gi√°o d·ª•c, vi·∫øt l√°ch, gi·∫£ng d·∫°y, PR ho·∫∑c truy·ªÅn th√¥ng.",
        "Suy nghƒ© t√≠ch c·ª±c, c√≥ l√≤ng tin l·ªõn v√†o b·∫£n th√¢n v√† l√Ω t∆∞·ªüng s·ªëng."
      ],
      insight: "Kh·∫£ nƒÉng m·ªü r·ªông ki·∫øn th·ª©c v√† lan t·ªèa nƒÉng l∆∞·ª£ng t√≠ch c·ª±c cho ng∆∞·ªùi kh√°c."
    },
    {
      id: "saturn",
      title: "Sao Th·ªï",
      sign: "Song T·ª≠",
      house: "Nh√† 1", 
      icon: "‚ôÑ",
      color: "planet-saturn",
      signColor: "sign-gemini",
      content: [
        "M·ªôt m·∫∑t th·ªÉ hi·ªán t√≠nh c√°ch ch√≠n ch·∫Øn, t·ª± l·∫≠p s·ªõm, s·ªëng c√≥ tr√°ch nhi·ªám, nh∆∞ng ƒë√¥i khi c≈©ng t·∫°o n√™n c·∫£m gi√°c ng·∫°i ng√πng, thi·∫øu t·ª± tin ho·∫∑c r·ª•t r√® khi m·ªõi ti·∫øp x√∫c.",
        "Ng∆∞·ªùi n√†y c√≥ th·ªÉ g·∫∑p th√°ch th·ª©c trong vi·ªác th·ªÉ hi·ªán b·∫£n th√¢n ra b√™n ngo√†i, nh∆∞ng m·ªôt khi v∆∞·ª£t qua, s·∫Ω tr·ªü n√™n r·∫•t b·∫£n lƒ©nh v√† ƒë√°ng tin c·∫≠y."
      ],
      insight: "B√†i h·ªçc v·ªÅ k·ª∑ lu·∫≠t b·∫£n th√¢n v√† v∆∞·ª£t qua nh·ªØng gi·ªõi h·∫°n t·ª± √°p ƒë·∫∑t."
    }
  ];

  // Animation variants
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: { 
      opacity: 1,
      transition: { 
        staggerChildren: 0.08,
        delayChildren: 0.1
      } 
    },
    exit: { 
      opacity: 0,
      transition: { duration: 0.2 }
    }
  };

  const itemVariants = {
    hidden: { y: 15, opacity: 0 },
    visible: { 
      y: 0, 
      opacity: 1,
      transition: { type: "spring", stiffness: 100 }
    }
  };

  // Touch swipe handling
  const handleSwipe = (direction) => {
    if (direction === 'left' && selectedTab < astrologyData.length - 1) {
      setSelectedTab(selectedTab + 1);
    } else if (direction === 'right' && selectedTab > 0) {
      setSelectedTab(selectedTab - 1);
    }
  };

  // Swipe props for the content area
  const swipeProps = {
    onDragEnd: (e, { offset, velocity }) => {
      const swipe = Math.abs(offset.x) > 50;
      if (swipe) {
        const direction = offset.x > 0 ? 'right' : 'left';
        handleSwipe(direction);
      }
    },
    drag: 'x',
    dragConstraints: { left: 0, right: 0 },
    dragElastic: 0.7
  };

  return (
    <AnimatedRoute>
      <div className="container mb-20">
        <div className="mb-8 text-center">
          <h1 className="text-3xl font-display font-bold mb-3 text-gradient">C√°c H√†nh Tinh</h1>
          <p className="text-overlay content-backdrop max-w-lg mx-auto">
            M·ªói h√†nh tinh ƒë·∫°i di·ªán cho m·ªôt kh√≠a c·∫°nh kh√°c nhau trong t√≠nh c√°ch v√† cu·ªôc s·ªëng c·ªßa b·∫°n. 
            Kh√°m ph√° √Ω nghƒ©a c·ªßa t·ª´ng h√†nh tinh trong b·∫£n ƒë·ªì sao c·ªßa b·∫°n.
          </p>
        </div>

        <Tab.Group selectedIndex={selectedTab} onChange={setSelectedTab}>
          {/* Tabs */}
          <motion.div 
            className="sticky top-0 pt-2 pb-4 z-10 backdrop-blur-sm"
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5, delay: 0.3 }}
          >
            <Tab.List className="flex p-2 rounded-xl glass-card overflow-x-auto hide-scrollbar">
              <div className="flex space-x-2 w-full">
                {astrologyData.map((planet) => (
                  <Tab
                    key={planet.id}
                    className={({ selected }) =>
                      `tab-button flex-shrink-0 outline-none ${
                        selected ? 'bg-white bg-opacity-30 shadow-sm text-[#1a1033] font-semibold' : 'text-[#1a1033] text-opacity-70'
                      }`
                    }
                  >
                    <span className={`tab-icon ${planet.color}`}>{planet.icon}</span>
                    <span className="tab-label">{planet.title}</span>
                  </Tab>
                ))}
              </div>
            </Tab.List>
          </motion.div>

          {/* Planet indicator */}
          <div className="flex justify-center my-4">
            <div className="flex space-x-2">
              {astrologyData.map((_, idx) => (
                <div 
                  key={idx} 
                  className={`w-2 h-2 rounded-full transition-all duration-300 ${
                    idx === selectedTab 
                      ? 'bg-[#1a1033] scale-125' 
                      : 'bg-[#1a1033] bg-opacity-30'
                  }`}
                />
              ))}
            </div>
          </div>

          {/* Tab content with swipe support */}
          <Tab.Panels className="mt-4">
            <AnimatePresence mode="wait">
              {astrologyData.map((planet, idx) => (
                <Tab.Panel
                  key={planet.id}
                  className="focus:outline-none"
                  static={idx === selectedTab}
                >
                  {idx === selectedTab && (
                    <motion.div
                      variants={containerVariants}
                      initial="hidden"
                      animate="visible"
                      exit="exit"
                      className="planet-card"
                      {...swipeProps}
                    >
                      <span className={`planet-icon ${planet.color}`}>{planet.icon}</span>
                      
                      <motion.div className="planet-header" variants={itemVariants}>
                        <span className={`text-2xl ${planet.color}`}>{planet.icon}</span>
                        <div>
                          <h3 className="text-xl text-[#1a1033] font-bold">{planet.title}</h3>
                          {planet.sign && (
                            <div className="flex flex-wrap mt-1 gap-2">
                              <span className={`planet-badge border-${planet.signColor}`}>
                                {planet.sign}
                              </span>
                              {planet.house && (
                                <span className="planet-badge">
                                  {planet.house}
                                </span>
                              )}
                            </div>
                          )}
                        </div>
                      </motion.div>
                      
                      <div className="space-y-3 relative z-10 content-backdrop">
                        {planet.content.map((paragraph, pIdx) => (
                          <motion.p 
                            key={pIdx} 
                            className="text-sm md:text-base text-overlay"
                            variants={itemVariants}
                          >
                            {paragraph}
                          </motion.p>
                        ))}
                      </div>
                      
                      {planet.insight && (
                        <motion.div 
                          className={`insight-box border-${planet.color}`}
                          variants={itemVariants}
                        >
                          <span className="block font-semibold text-[#1a1033] mb-1">Insight:</span>
                          <span className="text-[#1a1033]">{planet.insight}</span>
                        </motion.div>
                      )}

                      {/* Swipe indicator */}
                      <div className="mt-6 text-center text-xs text-[#1a1033] text-opacity-60 font-medium">
                        <motion.div 
                          initial={{ opacity: 0 }}
                          animate={{ opacity: 1 }}
                          transition={{ delay: 0.5 }}
                          className="flex items-center justify-center"
                        >
                          {selectedTab > 0 && <span className="mr-2">‚Üê L∆∞·ªõt qua tr√°i</span>}
                          <span className="inline-block mx-1 w-1 h-1 rounded-full bg-[#1a1033] bg-opacity-30"></span>
                          {selectedTab < astrologyData.length - 1 && <span className="ml-2">L∆∞·ªõt qua ph·∫£i ‚Üí</span>}
                        </motion.div>
                      </div>
                    </motion.div>
                  )}
                </Tab.Panel>
              ))}
            </AnimatePresence>
          </Tab.Panels>
        </Tab.Group>
      </div>
    </AnimatedRoute>
  );
};

export default PlanetsPage; 